# ansible playbook: server_config.yml
# Usage: $ ansible-playbook server_config.yml
# Note: see [inventory] and [ansible.cfg] for preset details

---

- name: Web Servers Configuration
  hosts: web_servers
  become: yes
  tasks:

    - name: Update package cache
      block:
        - name: Update package cache for Ubuntu
          when: ansible_os_family == 'Debian'
          apt:
            update_cache: yes
          register: ubuntu_update_result

        - name: Display update results for Ubuntu
          when: ubuntu_update_result is defined and ubuntu_update_result.changed
          debug:
            msg: "Package cache updated for Ubuntu."

        - name: Update package cache for Oracle Linux
          when: ansible_os_family == 'RedHat'
          yum:
            update_only: yes
            update_cache: yes
          register: oraclelinux_update_result

        - name: Display update results for Oracle Linux
          when: oraclelinux_update_result is defined and oraclelinux_update_result.changed
          debug:
            msg: "Package cache updated for Oracle Linux."

    - name: Installs apache and apache supporting software
      block:
        - name: Install apache2 & php packages (Ubuntu)
          apt:
            name:
              - apache2
              - libapache2-mod-php
            state: latest
          when: ansible_distribution == "Ubuntu"

        - name: Install apache2 & php packages (Oracle Linux)
          dnf:
            name:
              - httpd
              - php
            state: latest
          when: ansible_distribution == "OracleLinux"

    - name: Start and enable Apache (Oracle Linux)
      service:
        name: httpd
        state: started
        enabled: yes
      when: ansible_distribution == "OracleLinux"

    - name: Update ServerAdmin in apache config file
      block:
        - name: Update current ServerAdmin (Oracle Liniux)
          lineinfile:
            path: /etc/httpd/conf/httpd.conf
            regexp: '^ServerAdmin'
            line: ServerAdmin martin.mato@ingrydacademy.com
          when: ansible_distribution == "OracleLinux"
          register: httpd

        - name: Restart httpd (OracleLinux)
          tags: apache,httpd
          service:
            name: httpd
            state: restarted
          when: httpd.changed

        - name: Update current ServerAdmin (Ubuntu)
          lineinfile:
            path: /etc/apache2/sites-available/000-default.conf
            regexp: '^(\s*)ServerAdmin'
            line: '         ServerAdmin martin.mato@ingrydacademy.com'
          when: ansible_distribution == "Ubuntu"
          register: apache_default_conf

        - name: Reload Apache (Ubuntu)
          service:
            name: apache2
            state: reloaded
          when: apache_default_conf.changed

    - name: Ensure http (port 80) and https (port 443) are open in the firewall
      block:
        - name: Open ports using UFW (Ubuntu)
          ufw:
            rule: allow
            port: "{{ item }}"
            state: enabled
          loop:
            - '80'
            - '443'
          when: ansible_distribution == "Ubuntu"

        - name: Open ports using firewalld (Oracle Linux)
          firewalld:
            port: "{{ item }}/tcp"
            permanent: yes
            state: enabled
            immediate: yes
          loop:
            - '80'
            - '443'
          when: ansible_distribution == "OracleLinux"

    - name: Start and Enable the firewall service
      service:
        name: "{{ firewall_service }}"
        state: started
        enabled: yes
      vars:
        firewall_service: "{{ 'ufw' if ansible_distribution == 'Ubuntu' else 'firewalld' }}"

  
- name: Database configuration
  hosts: db_servers
  become: true
  tasks:

    - name: Install MySQL database (Ubuntu)
      apt:
        name: mysql-server
        state: present
      when: ansible_distribution == "Ubuntu"
      register: mysql_installed_ubuntu

    - name: Start and enable MySQL service (Ubuntu)
      service:
        name: mysql
        state: started
        enabled: yes
      when: mysql_installed_ubuntu is defined and mysql_installed_ubuntu.changed

    - name: Install MySQL database (Oracle Linux)
      dnf:
        name: mysql-community-server
        state: present
      when: ansible_distribution == "OracleLinux"
      register: mysql_installed_oracle

    - name: Start and enable MySQL service
      service:
        name: mysqld
        state: started
        enabled: yes
      when: mysql_installed_oracle is defined and mysql_installed_oracle.changed

    - name: Assign password to root user
      mysql_user:
        name: root
        password: 'mySQLingryd'


- name: File configuration
  hosts: file_servers
  become: true
  tasks:
    - name: Install Samba
      package:
        name: samba  
        state: present
   
    - name: Start and Enable samba service
      service:
        name: "{{ 'smb' if ansible_distribution == 'OracleLinux' else 'smbd' }}"
        state: started
        enabled: yes

    - name: Open port for samba service
      block:
        - name: Allow Samba ports in UFW
          ufw:
            rule: allow
            port: 137:445/tcp
            comment: "Allow Samba ports in ufw"
          when: ansible_distribution == "Ubuntu"

        - name: Enable Samba service in firewalld
          firewalld:
            service: smb
            permanent: yes
            state: enabled
            immediate: yes
          when: ansible_distribution == "OracleLinux"

        - name: Open Samba ports in firewall
          ansible.posix.firewalld:
            port: 137-445/tcp
            permanent: true
            state: enabled
          when: ansible_distribution == "OracleLinux"

...
