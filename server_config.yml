# ansible playbook: server_config.yml
# Usage: $ ansible-playbook server_config.yml
# Note: see [inventory] and [ansible.cfg] for preset details

---

- name: Web Servers Configuration
  hosts: web_servers
  become: yes
  tasks:
    - name: Update package cache for Ubuntu
      when: ansible_os_family == 'Debian'
      apt:
        update_cache: yes
      register: ubuntu_update_result

    - name: Update package cache for Oracle Linux
      when: ansible_os_family == 'RedHat'
      yum:
        update_only: yes
        update_cache: yes
      register: oraclelinux_update_result

    - name: Display update results for Ubuntu
      when: ubuntu_update_result is defined and ubuntu_update_result.changed
      debug:
        msg: "Package cache updated for Ubuntu."

    - name: Display update results for Oracle Linux
      when: oraclelinux_update_result is defined and oraclelinux_update_result.changed
      debug:
        msg: "Package cache updated for Oracle Linux."

    - name: Install apache2 & php packages
      apt:
        name:
          - apache2
          - libapache2-mod-php
        state: latest
      when: ansible_distribution == "Ubuntu"


    - name: Install apache2 & php packages
      dnf:
        name:
          - httpd
          - php
        state: latest
      when: ansible_distribution == "OracleLinux"

    - name: Start and enable Apache on OracleLinux
      service:
        name: httpd
        state: started
        enabled: yes
      when: ansible_distribution == "OracleLinux"

---

- name: db_servers
  hosts: node1,node2
  become: true
  tasks:
    - name: Install MySQL database
      apt:
        name: mysql-server
        state: present

    - name: Start and enable MySQL
      service:
        name: mysqld
        state: started
        enabled: yes

    - name: Assign password to root user
      mysql_user:
        name: root
        password: 'mySQLingryd'


- name: file_servers
  hosts: all
  become: true
  tasks:
    - name: Install Samba
      apt:
        name: samba  
        state: present
      when: ansible_distribution == "Ubuntu"

    - name: Start and Enable samba service
      service:
        name: smb
        state: started
        enabled: yes
      when: ansible_distribution == "Ubuntu"
      notify: restart samba

    - name: Install Samba
      dnf:
        name: samba
        state: present
      when: ansible_distribution != "Ubuntu"

    - name: Start and Enable samba service
      service:
        name: smb
        state: started
        enabled: yes
      when: ansible_distribution != "Ubuntu"
      notify: restart samba

    - name: Open port for samba service
      firewalld:
        service: smb
        permanent: yes
        state: enabled
        immediate: yes 
